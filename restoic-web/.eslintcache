[{"/Users/macbook/restoic-app-19339/restoic-web/src/index.js":"1","/Users/macbook/restoic-app-19339/restoic-web/src/serviceWorkerRegistration.js":"2","/Users/macbook/restoic-app-19339/restoic-web/src/reportWebVitals.js":"3","/Users/macbook/restoic-app-19339/restoic-web/src/containers/App/App.js":"4","/Users/macbook/restoic-app-19339/restoic-web/src/store/index.js":"5","/Users/macbook/restoic-app-19339/restoic-web/src/utils/loggedUser.js":"6","/Users/macbook/restoic-app-19339/restoic-web/src/containers/Login/index.js":"7","/Users/macbook/restoic-app-19339/restoic-web/src/components/PrivateRoute/index.js":"8","/Users/macbook/restoic-app-19339/restoic-web/src/modules/index.js":"9","/Users/macbook/restoic-app-19339/restoic-web/src/components/Input/index.js":"10","/Users/macbook/restoic-app-19339/restoic-web/src/modules/auth/index.js":"11","/Users/macbook/restoic-app-19339/restoic-web/src/components/LoginHeader/index.js":"12","/Users/macbook/restoic-app-19339/restoic-web/src/utils/firstTimeLogin.js":"13","/Users/macbook/restoic-app-19339/restoic-web/src/services/api.js":"14","/Users/macbook/restoic-app-19339/restoic-web/src/config.js":"15","/Users/macbook/restoic-app-19339/restoic-web/src/utils/rememberMe.js":"16","/Users/macbook/restoic-app-19339/restoic-web/src/utils/getInitialState.js":"17","/Users/macbook/restoic-app-19339/restoic-web/src/utils/excludeSideBarForRoutes.js":"18","/Users/macbook/restoic-app-19339/restoic-web/src/containers/ChoosePlan/index.js":"19","/Users/macbook/restoic-app-19339/restoic-web/src/components/ChoosePlanItem/index.js":"20","/Users/macbook/restoic-app-19339/restoic-web/src/components/SideBar/index.js":"21","/Users/macbook/restoic-app-19339/restoic-web/src/components/SideBarItem/index.js":"22","/Users/macbook/restoic-app-19339/restoic-web/src/containers/WeeklyTasks/index.js":"23","/Users/macbook/restoic-app-19339/restoic-web/src/components/NavHeader/index.js":"24","/Users/macbook/restoic-app-19339/restoic-web/src/modules/challenges/index.js":"25","/Users/macbook/restoic-app-19339/restoic-web/src/utils/checkIsCoach.js":"26","/Users/macbook/restoic-app-19339/restoic-web/src/components/Modals/SelectDateModal/index.js":"27","/Users/macbook/restoic-app-19339/restoic-web/src/components/WeeklyTask/index.js":"28","/Users/macbook/restoic-app-19339/restoic-web/src/components/GroupOfTasks/index.js":"29","/Users/macbook/restoic-app-19339/restoic-web/src/components/WeeklyInsightsItem/index.js":"30","/Users/macbook/restoic-app-19339/restoic-web/src/modules/stats/index.js":"31","/Users/macbook/restoic-app-19339/restoic-web/src/utils/getPercentageOfNumber.js":"32","/Users/macbook/restoic-app-19339/restoic-web/src/components/ComingSoon/index.js":"33","/Users/macbook/restoic-app-19339/restoic-web/src/components/Modals/TaskModal/index.js":"34","/Users/macbook/restoic-app-19339/restoic-web/src/utils/getTaskTitle.js":"35","/Users/macbook/restoic-app-19339/restoic-web/src/containers/TeamProgress/index.js":"36","/Users/macbook/restoic-app-19339/restoic-web/src/components/MemberStats/index.js":"37","/Users/macbook/restoic-app-19339/restoic-web/src/containers/Downloads/index.js":"38","/Users/macbook/restoic-app-19339/restoic-web/src/components/GroupOfDownloads/index.js":"39","/Users/macbook/restoic-app-19339/restoic-web/src/components/DownloadsItem/index.js":"40"},{"size":1143,"mtime":1614649670464,"results":"41","hashOfConfig":"42"},{"size":5064,"mtime":1610813329771,"results":"43","hashOfConfig":"42"},{"size":364,"mtime":1610813329770,"results":"44","hashOfConfig":"42"},{"size":2421,"mtime":1615140010638,"results":"45","hashOfConfig":"42"},{"size":830,"mtime":1613439652122,"results":"46","hashOfConfig":"42"},{"size":203,"mtime":1613439652123,"results":"47","hashOfConfig":"42"},{"size":4583,"mtime":1614650964537,"results":"48","hashOfConfig":"42"},{"size":475,"mtime":1613782043994,"results":"49","hashOfConfig":"42"},{"size":375,"mtime":1614650964542,"results":"50","hashOfConfig":"42"},{"size":1515,"mtime":1613439652109,"results":"51","hashOfConfig":"42"},{"size":6879,"mtime":1614650964541,"results":"52","hashOfConfig":"42"},{"size":199,"mtime":1613439652111,"results":"53","hashOfConfig":"42"},{"size":378,"mtime":1613439652122,"results":"54","hashOfConfig":"42"},{"size":450,"mtime":1614650964543,"results":"55","hashOfConfig":"42"},{"size":398,"mtime":1613439652113,"results":"56","hashOfConfig":"42"},{"size":326,"mtime":1614650964545,"results":"57","hashOfConfig":"42"},{"size":531,"mtime":1614650964543,"results":"58","hashOfConfig":"42"},{"size":242,"mtime":1614650964543,"results":"59","hashOfConfig":"42"},{"size":3367,"mtime":1614650964536,"results":"60","hashOfConfig":"42"},{"size":1275,"mtime":1614650964524,"results":"61","hashOfConfig":"42"},{"size":3069,"mtime":1614650964531,"results":"62","hashOfConfig":"42"},{"size":647,"mtime":1614650964532,"results":"63","hashOfConfig":"42"},{"size":7683,"mtime":1614650964540,"results":"64","hashOfConfig":"42"},{"size":2190,"mtime":1615140831570,"results":"65","hashOfConfig":"42"},{"size":6880,"mtime":1614650964542,"results":"66","hashOfConfig":"42"},{"size":144,"mtime":1614650964543,"results":"67","hashOfConfig":"42"},{"size":2044,"mtime":1614650964527,"results":"68","hashOfConfig":"42"},{"size":1191,"mtime":1614650964535,"results":"69","hashOfConfig":"42"},{"size":389,"mtime":1614650964525,"results":"70","hashOfConfig":"42"},{"size":414,"mtime":1614650964534,"results":"71","hashOfConfig":"42"},{"size":2698,"mtime":1615139472990,"results":"72","hashOfConfig":"42"},{"size":233,"mtime":1615139472991,"results":"73","hashOfConfig":"42"},{"size":1509,"mtime":1614650964524,"results":"74","hashOfConfig":"42"},{"size":2447,"mtime":1614650964529,"results":"75","hashOfConfig":"42"},{"size":511,"mtime":1614650964544,"results":"76","hashOfConfig":"42"},{"size":8008,"mtime":1615139472989,"results":"77","hashOfConfig":"42"},{"size":1801,"mtime":1615139472988,"results":"78","hashOfConfig":"42"},{"size":2326,"mtime":1615144698073,"results":"79","hashOfConfig":"42"},{"size":409,"mtime":1615142167856,"results":"80","hashOfConfig":"42"},{"size":394,"mtime":1615144243132,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"12s40mq",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"84"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/macbook/restoic-app-19339/restoic-web/src/index.js",[],["171","172"],"/Users/macbook/restoic-app-19339/restoic-web/src/serviceWorkerRegistration.js",[],"/Users/macbook/restoic-app-19339/restoic-web/src/reportWebVitals.js",[],"/Users/macbook/restoic-app-19339/restoic-web/src/containers/App/App.js",[],"/Users/macbook/restoic-app-19339/restoic-web/src/store/index.js",[],"/Users/macbook/restoic-app-19339/restoic-web/src/utils/loggedUser.js",[],"/Users/macbook/restoic-app-19339/restoic-web/src/containers/Login/index.js",["173"],"import React, { useEffect, useState } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { GoogleLogin } from 'react-google-login';\nimport AppleLogin from 'react-apple-login';\n// components\nimport Input from '../../components/Input';\nimport LoginHeader from '../../components/LoginHeader';\n// actions \nimport { googleSignAction, loginAction, resetErrorAction, signUpApple } from '../../modules/auth';\n// style\nimport './index.css'\nimport { rememberMeGet, rememeberMeAdd } from '../../utils/rememberMe';\nimport { withRouter } from 'react-router-dom';\n\nconst mainActions = {\n  \tloginAction: loginAction,\n\tresetErrorAction: resetErrorAction,\n\tgoogleSignAction: googleSignAction,\n\tsignUpAppleAction: signUpApple\n};\n\nconst Login = (props) => {\n\tconst [email, setEmail] = useState(rememberMeGet());\n\tconst [password, setPassword] = useState('');\n\tconst [rememberMe, setRememberMe] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (props.authenticated) {\n\t\t\tprops.history.replace('/')\n\t\t}\n\t\tresetErrorAction()\n\t}, []);\n\n\treturn (\n\t\t<div className=\"loginContainer\">\n\t\t\t<LoginHeader />\n\t\t\t<div className=\"loginContent\">\n\t\t\t\t<div className=\"loginCenter\">\n\t\t\t\t\t<div className=\"loginCenterWelcomeText\">Welcome to Restoic Smart Coach. Please log in below.</div>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tonChange={({ target: { value }}) => setEmail(value)}\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\terror={props.emailError}\n\t\t\t\t\t\terrorMessage={props.emailErrorText}\n\t\t\t\t\t\tclassName=\"loginInput\"\n\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tonChange={({ target: { value }}) => setPassword(value)}\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\terror={props.passwordError || props.non_field_errorsError}\n\t\t\t\t\t\terrorMessage={props.passwordErrorText || props.non_field_errorsErrorText}\n\t\t\t\t\t\tclassName=\"loginInput\"\n\t\t\t\t\t\tplaceholder=\"Enter password\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"loginCenterRememberWrapper\">\n\t\t\t\t\t\t<div className=\"loginCenterRememberMe\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tvalue={rememberMe}\n\t\t\t\t\t\t\t\tonChange={() => setRememberMe(!rememberMe)}\n\t\t\t\t\t\t\t\tclassName=\"rememberMeInput\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className=\"loginCenterRememberMeText\">Remember me</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"loginCenterForgotPassword\"\n\t\t\t\t\t\t\tonClick={() => alert('Go to forgot Password')}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tForgot password?\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tif (rememberMe) {\n\t\t\t\t\t\t\t\trememeberMeAdd(email)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tprops.loginAction(email, password)\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName=\"loginButton\"\n\t\t\t\t\t>\n\t\t\t\t\t\tLOGIN\n\t\t\t\t\t</div>\n\t\t\t\t\t<AppleLogin  \n\t\t\t\t\t\tclientId=\"com.crowdbotics.restoicweb\" \n\t\t\t\t\t\tredirectURI=\"https://restoic.herokuapp.com/login\"\n\t\t\t\t\t\tresponseType={\"code\"} \n\t\t\t\t\t\tresponseMode={\"form_post\"}  \n\t\t\t\t\t\tusePopup={true}\n\t\t\t\t\t\tcallback={(res) => {\n\t\t\t\t\t\t\tconsole.log(\"res apple\", res)\n\t\t\t\t\t\t\tprops.signUpAppleAction(res.authorization.code, res.authorization.id_token)\n\t\t\t\t\t\t}}\n\t\t\t\t\t\trender={renderProps => (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonClick={renderProps.onClick}\n\t\t\t\t\t\t\t\tdisabled={renderProps.disabled}\n\t\t\t\t\t\t\t\tclassName=\"appleButton\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div className=\"appleButtonIcon\" />\n\t\t\t\t\t\t\t\t<div className=\"appleButtonText\">Login with Apple</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<GoogleLogin\n\t\t\t\t\t\tclientId=\"1084903484074-uguvndtqq7e8mp0iuvmqs1qs0u96bcap.apps.googleusercontent.com\"\n\t\t\t\t\t\tbuttonText=\"Login with Google\"\n\t\t\t\t\t\tonSuccess={({ tokenObj: { access_token }}) => props.googleSignAction(access_token)}\n\t\t\t\t\t\tonFailure={(e) => alert(e)}\n\t\t\t\t\t\tcookiePolicy={'single_host_origin'}\n\t\t\t\t\t\trender={renderProps => (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonClick={renderProps.onClick}\n\t\t\t\t\t\t\t\tdisabled={renderProps.disabled}\n\t\t\t\t\t\t\t\tclassName=\"googleButton\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div className=\"googleButtonIcon\" />\n\t\t\t\t\t\t\t\t<div className=\"googleButtonText\">Login with Google</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"loginTermsText\">\n\t\t\t\t\t\tBy using Restoic you agree to our&nbsp;\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName=\"loginTermsLabel\"\n\t\t\t\t\t\t\tonClick={() => alert('go to terms page')}\n\t\t\t\t\t\t>Terms</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default withRouter(connect(\n  ({\n    auth: {\n\t\tauthenticated,\n\t\terror,\n\t\tloading,\n\t\temailError,\n\t\tpasswordError,\n\t\temailErrorText,\n\t\tpasswordErrorText,\n\t\tnon_field_errorsErrorText,\n\t\tnon_field_errorsError,\n    }\n  }) => ({\n    authenticated,\n    error,\n\tloading,\n\temailError,\n\tpasswordError,\n\temailErrorText,\n\tpasswordErrorText,\n\tnon_field_errorsErrorText,\n\tnon_field_errorsError,\n  }),\n  dispatch => bindActionCreators(mainActions, dispatch)\n)(Login));","/Users/macbook/restoic-app-19339/restoic-web/src/components/PrivateRoute/index.js",[],"/Users/macbook/restoic-app-19339/restoic-web/src/modules/index.js",["174"],"import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport authReducer from '../modules/auth';\nimport challenges from './challenges';\nimport stats from './stats';\n\nexport default history => combineReducers({\n  router: connectRouter(history),\n  auth: authReducer,\n  challenges: challenges,\n  stats: stats\n  // add more reducers\n});","/Users/macbook/restoic-app-19339/restoic-web/src/components/Input/index.js",[],"/Users/macbook/restoic-app-19339/restoic-web/src/modules/auth/index.js",["175"],"import ApiInstance, { removeTokenFromHeader, setTokenIntoHeader } from '../../services/api';\nimport { replace } from 'connected-react-router'\nimport axios from 'axios';\nimport { firstTimeLogin } from '../../utils/firstTimeLogin';\nimport { getInitialState } from '../../utils/getInitialState';\nimport { isCoach } from '../../utils/checkIsCoach';\n\nexport const LOGIN_START = 'auth/LOGIN_START';\nexport const LOGIN_SUCCESS = 'auth/LOGIN_SUCCESS';\nexport const LOGIN_FAILED = 'auth/LOGIN_FAILED';\nexport const RESET_ERRORS = 'auth/RESET_ERRORS';\nexport const SET_ERROR = 'auth/SET_ERROR';\nexport const LOGOUT_ACTION = 'auth/LOGOUT_ACTION';\n\n\nconst initialState = {\n    authenticated: false,\n    loading: false,\n    token: null,\n    error: null,\n    emailError: false,\n    passwordError: false,\n    emailErrorText: '',\n    passwordErrorText: '',\n    non_field_errorsErrorText: '',\n    non_field_errorsError: false,\n    user: {},\n    ...getInitialState()\n};\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n      case LOGIN_START:\n        return {\n          ...state,\n          loading: true\n        };\n      case LOGIN_SUCCESS:\n        return {\n          ...state,\n          token: payload.token,\n          authenticated: true,\n          loading: false,\n          user: payload.user\n        };\n      case LOGIN_FAILED:\n        return {\n          ...state,\n          error: payload,\n          loading: false\n        };\n      case RESET_ERRORS:\n        return {\n          ...state,\n          emailError: false,\n          passwordError: false,\n          emailErrorText: '',\n          passwordErrorText: '',\n          non_field_errorsErrorText: '',\n          non_field_errorsError: false,\n        };\n      case SET_ERROR: {\n          return {\n            ...state,\n            [`${payload.field}Error`]: true,\n            [`${payload.field}ErrorText`]: payload.message,\n            loading: false,\n          };\n        }\n      case LOGOUT_ACTION: {\n        return {\n          authenticated: false,\n          loading: false,\n          token: null,\n          error: null,\n          emailError: false,\n          passwordError: false,\n          emailErrorText: '',\n          passwordErrorText: '',\n          non_field_errorsErrorText: '',\n          non_field_errorsError: false,\n          user: {},\n        }\n      }\n\t\t\tdefault: \n\t\t\t\treturn state;\n    }\n};\n\nexport const resetErrorAction = () => (dispatch) => dispatch({ type: RESET_ERRORS });\n\nexport const loginAction = (email, password) => (dispatch) => {\n  dispatch({ type: RESET_ERRORS });\n\tdispatch({ type: LOGIN_START });\n\tApiInstance.post('/rest-auth/login/', { email, password })\n\t\t.then(({ data }) => {\n      if (!isCoach(data)) return dispatch({ type: SET_ERROR, payload: { field: 'non_field_errors', message: 'Access denied.' } });\n      // add header\n      setTokenIntoHeader(data.key)\n      // \n      dispatch({ type: LOGIN_SUCCESS, payload: { token: data.key, user: data.user } });\n      localStorage.setItem('auth', JSON.stringify({ loggedIn: true }))\n\t\t\tlocalStorage.setItem('user', JSON.stringify(data.user));\n      localStorage.setItem('token', JSON.stringify(data.key));\n      if (firstTimeLogin(data.user.email)) {\n        return dispatch(replace('/choosePlan'))\n      }\n      dispatch(replace('/'))\n\t\t})\n\t\t.catch(({ response: { data }}) => {\n      dispatch({ type: RESET_ERRORS });\n      const arrayErrors = Object.entries(data);\n      const arrayWithMessages = arrayErrors.map(item => ({\n        field: `${item[0]}`,\n        message: item[1].toString(),\n      }));\n      arrayWithMessages.map(item =>\n        dispatch({ type: SET_ERROR, payload: { field: item.field, message: item.message } }));\n    })\n}\n\nexport const logoutAction = () => dispatch => {\n  localStorage.removeItem('auth');\n  localStorage.removeItem('user');\n  localStorage.removeItem('token');\n  dispatch({ type: LOGOUT_ACTION });\n  dispatch(replace('/login'));\n  removeTokenFromHeader();\n}\n\nexport const signUpApple = (code, token) => (dispatch) =>  {\n  dispatch({ type: RESET_ERRORS });\n\tdispatch({ type: LOGIN_START });\n  const params = new URLSearchParams()\n  params.append('access_token', code)\n  params.append('id_token', token)\n  \n  const config = {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n  }\n\n  axios.post('https://restoic-app-19339.botics.co/rest-auth/apple/', params, config)\n    .then(({ data }) => {\n      if (!isCoach(data)) return dispatch({ type: SET_ERROR, payload: { field: 'non_field_errors', message: 'Access denied.' } });\n      // add header\n      setTokenIntoHeader(data.key)\n      // \n      dispatch({ type: LOGIN_SUCCESS, payload: { token: data.key, user: data.user } });\n      localStorage.setItem('auth', JSON.stringify({ loggedIn: true }))\n      localStorage.setItem('user', JSON.stringify(data.user));\n      localStorage.setItem('token', JSON.stringify(data.key));\n      if (firstTimeLogin(data.user.email)) {\n        return dispatch(replace('/choosePlan'))\n      }\n      dispatch(replace('/'))\n    })\n    .catch(({ response: { data }}) => {\n      dispatch({ type: RESET_ERRORS });\n      const arrayErrors = Object.entries(data);\n      const arrayWithMessages = arrayErrors.map(item => ({\n        field: `${item[0]}`,\n        message: item[1].toString(),\n      }));\n      arrayWithMessages.map(item =>\n        dispatch({ type: SET_ERROR, payload: { field: item.field, message: item.message } }));\n    })\n}\n\nexport const googleSignAction = (token) => (dispatch) => {\n  dispatch({ type: RESET_ERRORS });\n\tdispatch({ type: LOGIN_START });\n  const params = new URLSearchParams()\n\n  params.append('access_token', token);\n\n  const config = {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n  }\n\n  axios.post('https://restoic-app-19339.botics.co/rest-auth/google/', params, config)\n    .then(({ data }) => {\n      if (!isCoach(data)) return dispatch({ type: SET_ERROR, payload: { field: 'non_field_errors', message: 'Access denied.' } });\n      // add header\n      setTokenIntoHeader(data.key)\n      // \n      dispatch({ type: LOGIN_SUCCESS, payload: { token: data.key, user: data.user } });\n      localStorage.setItem('auth', JSON.stringify({ loggedIn: true }))\n\t\t\tlocalStorage.setItem('user', JSON.stringify(data.user));\n      localStorage.setItem('token', JSON.stringify(data.key));\n      if (firstTimeLogin(data.user.email)) {\n        return dispatch(replace('/choosePlan'))\n      }\n      dispatch(replace('/'))\n    })\n    .catch(({ response: { data }}) => {\n      dispatch({ type: RESET_ERRORS });\n      const arrayErrors = Object.entries(data);\n      const arrayWithMessages = arrayErrors.map(item => ({\n        field: `${item[0]}`,\n        message: item[1].toString(),\n      }));\n      arrayWithMessages.map(item =>\n        dispatch({ type: SET_ERROR, payload: { field: item.field, message: item.message } }));\n    })\n}\n","/Users/macbook/restoic-app-19339/restoic-web/src/components/LoginHeader/index.js",[],"/Users/macbook/restoic-app-19339/restoic-web/src/utils/firstTimeLogin.js",[],"/Users/macbook/restoic-app-19339/restoic-web/src/services/api.js",[],"/Users/macbook/restoic-app-19339/restoic-web/src/config.js",[],"/Users/macbook/restoic-app-19339/restoic-web/src/utils/rememberMe.js",[],"/Users/macbook/restoic-app-19339/restoic-web/src/utils/getInitialState.js",[],"/Users/macbook/restoic-app-19339/restoic-web/src/utils/excludeSideBarForRoutes.js",[],"/Users/macbook/restoic-app-19339/restoic-web/src/containers/ChoosePlan/index.js",[],"/Users/macbook/restoic-app-19339/restoic-web/src/components/ChoosePlanItem/index.js",[],"/Users/macbook/restoic-app-19339/restoic-web/src/components/SideBar/index.js",["176"],"import React from 'react';\nimport './index.css';\nimport SideBarItem from '../../components/SideBarItem';\nimport { withRouter } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n//actions\nimport { logoutAction } from '../../modules/auth';\n// sidebar icons\nimport weeklyTasksIcon from '../../assets/icons/icon_weekly.png';\nimport weeklyTasksIconActive from '../../assets/icons/icon_weekly_active.png'\nimport teamProgressIcon from '../../assets/icons/icon_team_progress.png';\nimport teamProgressIconActive from '../../assets/icons/icon_team_progress_active.png';\nimport teamChat from '../../assets/icons/icon_chat.png';\nimport teamCoaching from '../../assets/icons/icon_team_coaching.png';\nimport choosePlanIcon from '../../assets/icons/icon_choose_plan.png';\nimport adminIcon from '../../assets/icons/icon_admin.png';\nimport downloadsIcon from '../../assets/icons/icon_download.png';\nimport downloadsIconActive from '../../assets/icons/icon_download_active.png';\nimport contactUsIcon from '../../assets/icons/icon_contact_us.png';\nimport logoutIcon from '../../assets/icons/icon_logout.png';\n\nconst mainActions = {\n    logoutAction: logoutAction,\n};\n\nconst sideBarItems = [\n    { label: 'Weekly Tasks', path: '/', icon: weeklyTasksIcon, iconActive: weeklyTasksIconActive },\n    { label: 'Team Progress', path: '/teamProgress', icon: teamProgressIcon, iconActive: teamProgressIconActive },\n    { label: 'Team Chat', path: '/teamChat', icon: teamChat, iconActive: teamChat },\n    { label: 'Team coaching', path: '/teamCoaching', icon: teamCoaching, iconActive: teamCoaching },\n    { label: 'Choose your program', path: '/choosePlanInner', icon: choosePlanIcon, iconActive: choosePlanIcon },\n    { label: 'Admin', path: '/admin', icon: adminIcon, iconActive: adminIcon },\n    { label: 'Downloads', path: '/downloads', icon: downloadsIcon, iconActive: downloadsIconActive },\n    { label: 'Contact us', path: '/contactUs', icon: contactUsIcon, iconActive: contactUsIcon },\n]\n\nconst SideBar = ({ history: { push }, location: { pathname }, logoutAction }) => (\n    <div className=\"sideBarWrapper\">\n        <div className=\"sideBarLogo\" onClick={() => push('/')} />\n        {\n            sideBarItems.map((sideBarItem, key) => (\n                <SideBarItem\n                    key={key}\n                    label={sideBarItem.label}\n                    icon={sideBarItem.icon}\n                    iconActive={sideBarItem.iconActive}\n                    onClick={() => push(sideBarItem.path)}\n                    isActive={pathname === sideBarItem.path}\n                />\n            ))\n        }\n        <div className=\"sideBarLogout\">\n            <SideBarItem\n                classNameWrapper=\"logoutInnerItem\"\n                label={\"Logout\"}\n                icon={logoutIcon}\n                onClick={() => logoutAction()}\n                isActive={false}\n            />\n        </div>\n    </div>\n);\n\nexport default withRouter(connect(\n({}) => ({}),\ndispatch => bindActionCreators(mainActions, dispatch)\n)(SideBar));\n","/Users/macbook/restoic-app-19339/restoic-web/src/components/SideBarItem/index.js",[],"/Users/macbook/restoic-app-19339/restoic-web/src/containers/WeeklyTasks/index.js",["177","178"],"import React, { useEffect, useState } from 'react';\nimport NavHeader from '../../components/NavHeader';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { CircularProgressbarWithChildren, buildStyles } from 'react-circular-progressbar';\nimport { changeWeek, getCurrentSelectedChallenge, selectTask, closeTaskModal } from '../../modules/challenges';\nimport WeeklyTask from '../../components/WeeklyTask';\nimport GroupOfTasks from '../../components/GroupOfTasks';\nimport { getTeamStats } from '../../modules/stats';\nimport { getPercentageOfNumber } from '../../utils/getPercentageOfNumber';\nimport TaskModal from '../../components/Modals/TaskModal';\n// style\nimport 'react-circular-progressbar/dist/styles.css';\nimport './index.css';\n// icons\nimport headphonesIcon from '../../assets/icons/icon_headphones.png';\nimport notesIcon from '../../assets/icons/icon_notes.png';\nimport downloadIcon from '../../assets/icons/icon_download_task.png';\nimport logoIcon from '../../assets/icons/icon_task_logo.png';\nimport WeeklyInsightsItem from '../../components/WeeklyInsightsItem';\n\n\nconst tasks = [\n    { \n        groupItems: [\n            { label: 'Listen (In-App)', infoIconClass: 'groupItemInfoIconBlack', actionIcon: headphonesIcon, isOrange: false, id: 0 },\n            { label: 'Homework', infoIconClass: 'groupItemInfoIconBlack', actionIcon: notesIcon, isOrange: false, id: 1 },\n        ],\n        title: 'ATHLETE TASKS'\n    },\n    { \n        groupItems: [\n            { label: 'Weekly tasks', infoIconClass: 'groupItemInfoIconBlack', actionIcon: notesIcon, isOrange: false, id: 2 },\n            { label: 'Print & Provide', infoIconClass: 'groupItemInfoIconBlack', actionIcon: downloadIcon, isOrange: false, id: 3 },\n        ],\n        title: 'COACH TASKS'\n    },\n    { \n        groupItems: [\n            { label: 'Self-Talk Reframing Exercise', infoIconClass: 'groupItemInfoIconWhite', actionIcon: logoIcon, isOrange: true, id: 4 },\n            { label: 'Weekly Discussion Points', infoIconClass: 'groupItemInfoIconWhite', actionIcon: logoIcon, isOrange: true, id: 4 },\n        ],\n        title: 'TEAM ACTIVITIES'\n    },\n];\n\nconst mainActions = {\n    getCurrentSelectedChallengeAction: getCurrentSelectedChallenge,\n    changeWeekAction: changeWeek,\n    getTeamStatsAction: getTeamStats,\n    selectTaskAction: selectTask,\n    closeTaskModalAction: closeTaskModal\n}\n\nconst WeeklyTasks = ({\n    user: { first_name: firstName, last_name: lastName, image },\n    getCurrentSelectedChallengeAction,\n    changeWeekAction,\n    currentWeek,\n    numberOfWeeks,\n    start_date = null,\n    estimatedDate = 'Jan 24, 2021',\n    getTeamStatsAction,\n    weeklyProgress,\n    selectTaskAction,\n    closeTaskModalAction,\n    modalSelectTask,\n    selectedTask,\n    selectedTaskTitle,\n    selectedTaskCategoryTitle\n}) => {\n    useEffect(() => {\n        getTeamStatsAction()\n        getCurrentSelectedChallengeAction()\n    }, [])\n\n    return (\n        <div className=\"weeklyTasksContainer\">\n            <NavHeader\n                title=\"Weekly Tasks\"\n                firstName={firstName}\n                lastName={lastName}\n                userImage={image}\n                numbOfWeek={currentWeek}\n                maxWeeks={numberOfWeeks}\n                prevWeek={() => changeWeekAction(currentWeek - 1)}\n                nextWeek={() => changeWeekAction(currentWeek + 1)}\n                startDate={start_date}\n            />\n            <div className=\"weeklyTasksContent\">\n                <div className=\"weeklyTasksCardsWrapper\">\n                    {\n                        tasks.map((groupItem, key) => (\n                            <GroupOfTasks title={groupItem.title} key={key}>\n                                {\n                                    groupItem.groupItems.map((item, key2) => (\n                                        <WeeklyTask\n                                            key={key2}\n                                            title={item.label}\n                                            isOrange={item.isOrange}\n                                            infoIconClass={item.infoIconClass}\n                                            actionIcon={item.actionIcon}\n                                            onClick={() => selectTaskAction(item.id)}\n                                        />\n                                    ))\n                                }\n                            </GroupOfTasks>\n                        ))\n                    }\n                </div>\n                <div className=\"weeklyTasksStatsWrapper\">\n                    <div className=\"weeklyTasksStatsLabel\">weekly smart coach insights</div>\n                    <div className=\"weeklyTasksStatsContent\">\n                        <WeeklyInsightsItem />\n                        <div className=\"weeklyTasksStatusProgressLabel\">\n                            weekly team progress\n                        </div>\n                        <div className=\"weeklyTasksStatusProgressSubtitle\">\n                            Estimate Finish Date: {estimatedDate}\n                        </div>\n                        <div style={{ width: '172px', display: 'flex', alignSelf: 'center' }} >\n                            <CircularProgressbarWithChildren\n                                value={getPercentageOfNumber(weeklyProgress.done, weeklyProgress.total_tasks)}\n                                styles={buildStyles({\n                                    pathColor: \"#E83A1F\",\n                                    trailColor: \"#ffffff\",\n                                    backgroundColor: \"#ffffff\",\n                                    \n                                })}\n                                strokeWidth={7}\n                                background\n                                minValue={0}\n                                maxValue={100}\n                            >\n                                <div className=\"graphChildren\">\n                                    <div className=\"weeklyTasksStatusGraphPercentage\">\n                                        {getPercentageOfNumber(weeklyProgress.done, weeklyProgress.total_tasks)} %\n                                    </div>\n                                    <div className=\"weeklyTasksStatusGraphSubtitle\">\n                                        weekly team progress\n                                    </div>\n                                </div>\n                            </CircularProgressbarWithChildren>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <TaskModal\n                isOpen={modalSelectTask}\n                closeModal={() => closeTaskModalAction()}\n                selectedTask={selectedTask}\n                selectedTaskTitle={selectedTaskTitle}\n                selectedTaskCategoryTitle={selectedTaskCategoryTitle}\n            />\n        </div>\n    );\n}\n\nexport default withRouter(connect(\n({\n    auth: {\n        user,\n    },\n    challenges: {\n        currentWeek,\n        numberOfWeeks,\n        challegeData: {\n            start_date\n        },\n        modalSelectTask,\n        selectedTask,\n        selectedTaskTitle,\n        selectedTaskCategoryTitle\n    },\n    stats: {\n        weeklyProgress: {\n            total_tasks,\n            done\n        }\n    }\n}) => ({\n    user,\n    currentWeek,\n    numberOfWeeks,\n    start_date,\n    weeklyProgress: {\n        total_tasks,\n        done\n    },\n    modalSelectTask,\n    selectedTask,\n    selectedTaskTitle,\n    selectedTaskCategoryTitle\n}),\ndispatch => bindActionCreators(mainActions, dispatch)\n)(WeeklyTasks));","/Users/macbook/restoic-app-19339/restoic-web/src/components/NavHeader/index.js",[],"/Users/macbook/restoic-app-19339/restoic-web/src/modules/challenges/index.js",["179"],"import ApiInstance from '../../services/api';\nimport { replace } from 'connected-react-router';\nimport _get from 'lodash/get';\nimport { getTeamStats } from '../stats';\nimport { getTaskTitle } from '../../utils/getTaskTitle';\n\nexport const SELECT_CHALLENGE_START = 'challenges/SELECT_CHALLENGE_START';\nexport const SELECT_CHALLENGE_SUCCESS = 'challenges/SELECT_CHALLENGE_SUCCESS';\nexport const SELECT_CHALLENGE_FAILED = 'challenges/SELECT_CHALLENGE_FAILED';\nexport const OPEN_SELECT_DATE_MODAL = 'challenges/OPEN_SELECT_DATE_MODAL';\nexport const CLOSE_SELECT_DATE_MODAL = 'challenges/CLOSE_SELECT_DATE_MODAL';\nexport const GET_CHALLENGE_START = 'challenges/GET_CHALLENGE_START';\nexport const GET_CHALLENGE_SUCCESS = 'challenges/GET_CHALLENGE_SUCCESS';\nexport const GET_CHALLENGE_FAILED = 'challenges/GET_CHALLENGE_FAILED';\nexport const CHANGE_CURRENT_WEEK = 'challenges/CHANGE_CURRENT_WEEK';\nexport const SELECT_TASK = 'challenges/SELECT_TASK';\nexport const UNSELECT_TASK = 'challenges/UNSELECT_TASK';\n\n\nconst initialState = {\n    loading: false,\n    error: null,\n    modalSelectDate: false,\n    currentWeek: 0,\n    tasksByWeek: null,\n    challegeData: {\n      challegeData: {\n        start_date: null\n      }\n    },\n    numberOfWeeks: 0,\n    selectedWeek: null,\n    selectedTask: [],\n    modalSelectTask: false,\n    selectedTaskTitle: '',\n    selectedTaskCategoryTitle: '',\n};\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n      // TODO: maybe this should be refactored\n      case SELECT_CHALLENGE_START:\n        return {\n          ...state,\n          loading: true\n        };\n      case SELECT_CHALLENGE_SUCCESS:\n        return {\n          ...state,\n        };\n      case SELECT_CHALLENGE_FAILED:\n        return {\n          ...state,\n          error: payload,\n          loading: false\n        };\n      // start modal select date\n      case OPEN_SELECT_DATE_MODAL:\n        return {\n          ...state,\n          modalSelectDate: true,\n        };\n      case CLOSE_SELECT_DATE_MODAL:\n        return {\n          ...state,\n          modalSelectDate: false,\n        };\n      // get challege for weekly tasks page\n      case GET_CHALLENGE_START:\n        return {\n          ...state,\n          loading: true,\n        };\n      case GET_CHALLENGE_SUCCESS:\n        return {\n          ...state,\n          loading: false,\n          currentWeek: payload.currentWeek,\n          tasksByWeek: payload.tasksByWeek,\n          challegeData: payload.challegeData,\n          numberOfWeeks: payload.numberOfWeeks,\n          selectedWeek: payload.selectedWeek\n        }\n      case GET_CHALLENGE_FAILED:\n        return {\n          ...state,\n          loading: false,\n          error: payload\n        }\n      case CHANGE_CURRENT_WEEK:\n        return {\n          ...state,\n          currentWeek: payload.currentWeek,\n          selectedWeek: payload.selectedWeek\n        }\n      // end challege for weekly tasks page\n      case SELECT_TASK:\n        return {\n          ...state,\n          selectedTask: payload.selectedTask,\n          selectedTaskTitle: payload.selectedTaskTitle,\n          selectedTaskCategoryTitle: payload.selectedTaskCategoryTitle,\n          modalSelectTask: true,\n        };\n      case UNSELECT_TASK:\n        return {\n          ...state,\n          selectedTask: [],\n          modalSelectTask: false,\n        };\n        default: \n          return state;\n    }\n};\n\n/* this action should be used for select plan screen to allow \n  user to choose plan and display select date modal\n*/\nexport const selectPlanAction = (id) => (dispatch) => {\n    dispatch({ type: SELECT_CHALLENGE_START });\n    ApiInstance.post('api/v1/selected-challenge', { challenge: id })\n      .then(({ data }) => {\n          if (data.start_date === null) {\n            return dispatch({ type: OPEN_SELECT_DATE_MODAL });\n            // dispatch action to open modal for select date\n          }\n          dispatch(closeSelectDateModal())\n          // TODO: reroute to weekly tests if start data is here\n          dispatch(replace('/'))\n      })\n      // catch error if member has no team assigned!\n      .catch((err) => dispatch({ type: SELECT_CHALLENGE_FAILED, payload: err }))\n}\n\n\n// this action should get selected plan and patch it with start date, USAGE: in modal for select date!\nexport const selectStartDateForPlan = (startDate) => (dispatch) => {\n  ApiInstance.get('api/v1/selected-challenge')\n    .then(({ data: { data: { id }}}) => {\n      // select date depend on selected plan id!\n      return ApiInstance.patch(`api/v1/selected-challenge/${id}/`, { start_date: startDate })\n    })\n    .then(() => {\n      // close modal and reroute on home page\n      dispatch(closeSelectDateModal());\n      dispatch(replace('/'))\n    })\n    .catch((err) => console.log('# error selectStartDateForPlan', err))\n};\n\n// weeekly tasks main action get selected challenge\nexport const getCurrentSelectedChallenge = () => (dispatch) => {\n  dispatch({ type: GET_CHALLENGE_START });\n  ApiInstance.get('api/v1/selected-challenge')\n    .then(({ data }) => {\n      // Save data about selected challenge\n      dispatch({\n        type: GET_CHALLENGE_SUCCESS,\n        payload: {\n          currentWeek: data['current-week'],\n          tasksByWeek: data.tasks_by_week,\n          challegeData: data.data,\n          numberOfWeeks: parseInt(data.data.challenge.weeks),\n          selectedWeek: _get(data.tasks_by_week, `week${data['current-week']}`, null)\n        }\n      })\n    })\n    .catch((err) => dispatch({ type: GET_CHALLENGE_FAILED, payload: err }))\n}\n\n// Action to swich current active week from navHeader\nexport const changeWeek = (weekNumber) => (dispatch, getState) => {\n    const {\n      challenges: {\n        tasksByWeek,\n      }\n    } = getState();\n    dispatch(getTeamStats(weekNumber));\n    dispatch({\n      type: CHANGE_CURRENT_WEEK,\n      payload: {\n        currentWeek: weekNumber,\n        selectedWeek: _get(tasksByWeek, `week${weekNumber}`, null)\n      }\n    })\n}\n\n// Action close select date modal!\nexport const closeSelectDateModal = () => (dispatch, getState) => {\n  const { router: { location: { pathname } } } = getState();\n  if (pathname === '/choosePlan') {\n    dispatch({ type: CLOSE_SELECT_DATE_MODAL });\n    return dispatch(replace('/'));\n  }\n  dispatch({ type: CLOSE_SELECT_DATE_MODAL });\n}\n\n// Action for select task and open modal\nexport const selectTask = (id) => (dispatch, getState) => {\n  const {\n    challenges: {\n      selectedWeek,\n    }\n  } = getState();\n  if (selectedWeek) {\n    const { title, categoryTitle } = getTaskTitle(id);\n    dispatch({\n      type: SELECT_TASK,\n      payload: {\n        selectedTask: _get(selectedWeek, `${id}`, []),\n        selectedTaskTitle: title,\n        selectedTaskCategoryTitle: categoryTitle\n      }\n    })\n  }\n}\n\n// Action close modal for tasks\nexport const closeTaskModal = () => (dispatch) => dispatch({ type: UNSELECT_TASK });\n","/Users/macbook/restoic-app-19339/restoic-web/src/utils/checkIsCoach.js",[],"/Users/macbook/restoic-app-19339/restoic-web/src/components/Modals/SelectDateModal/index.js",[],"/Users/macbook/restoic-app-19339/restoic-web/src/components/WeeklyTask/index.js",[],"/Users/macbook/restoic-app-19339/restoic-web/src/components/GroupOfTasks/index.js",[],"/Users/macbook/restoic-app-19339/restoic-web/src/components/WeeklyInsightsItem/index.js",[],"/Users/macbook/restoic-app-19339/restoic-web/src/modules/stats/index.js",["180"],"import ApiInstance from '../../services/api';\nimport { GET_CHALLENGE_FAILED } from '../challenges';\n\n\nexport const GET_TEAM_STATS_START = 'stats/GET_TEAM_STATS_START';\nexport const GET_TEAM_STATS_SUCCESS = 'stats/GET_TEAM_STATS_SUCCESS';\nexport const GET_TEAM_STATS_FAILED = 'stats/GET_TEAM_STATS_FAILED';\nexport const GET_MEMBER_STATS_START = 'stats/GET_MEMBER_STATS_START';\nexport const GET_MEMBER_STATS_SUCCESS = 'stats/GET_MEMBER_STATS_SUCCESS';\nexport const GET_MEMBER_STATS_FAILURE = 'stats/GET_MEMBER_STATS_FAILURE';\n\nconst initialState = {\n    loading: false,\n    error: null,\n    weeklyProgress: {\n        total_members: 0,\n        total_tasks: 0,\n        done: 0,\n        in_progress: 0,\n        not_started: 0,\n    },\n    totalProgress: {\n        total_members: 0,\n        total_tasks: 0,\n        done: 0,\n        in_progress: 0,\n        not_started: 0,\n    },\n    memberStats: [],\n};\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n      case GET_TEAM_STATS_START:\n        return {\n          ...state,\n          loading: true\n        };\n      case GET_TEAM_STATS_SUCCESS:\n        return {\n          ...state,\n          weeklyProgress: payload.weeklyProgress,\n          totalProgress: payload.totalProgress,\n          loading: false,\n        };\n      case GET_TEAM_STATS_FAILED:\n        return {\n          ...state,\n          error: payload,\n          loading: false\n        };\n      case GET_MEMBER_STATS_START:\n        return {\n          ...state,\n          loading: true,\n        }\n      case GET_MEMBER_STATS_SUCCESS:\n        return {\n          ...state,\n          loading: false,\n          memberStats: payload\n        }\n      case GET_MEMBER_STATS_FAILURE:\n        return {\n          ...state,\n          loading: false,\n          error: payload\n        }\n        default: \n            return state;\n    }\n};\n\n// This action should return team and total progress!\nexport const getTeamStats = (week) => (dispatch) => {\n    dispatch({ type: GET_TEAM_STATS_START });\n    ApiInstance.get('api/v1/statistic-task', { week })\n      .then(({ data }) => dispatch({\n          type: GET_TEAM_STATS_SUCCESS,\n          payload: {\n            totalProgress: data.total_progress,\n            weeklyProgress: data.weekly_progress\n          }\n      }))\n      .catch((err) => dispatch({ type: GET_CHALLENGE_FAILED, payload: err }));\n}\n\nexport const getMemberStats = (week) => (dispatch) => {\n    dispatch({ type: GET_MEMBER_STATS_START });\n    ApiInstance.get('api/v1/statistic-member', { week })\n      .then(({ data }) => dispatch({ type: GET_MEMBER_STATS_SUCCESS, payload: data }))\n      .catch((err) => dispatch({ type: GET_CHALLENGE_FAILED, payload: err }));\n}\n","/Users/macbook/restoic-app-19339/restoic-web/src/utils/getPercentageOfNumber.js",[],"/Users/macbook/restoic-app-19339/restoic-web/src/components/ComingSoon/index.js",[],"/Users/macbook/restoic-app-19339/restoic-web/src/components/Modals/TaskModal/index.js",[],"/Users/macbook/restoic-app-19339/restoic-web/src/utils/getTaskTitle.js",[],"/Users/macbook/restoic-app-19339/restoic-web/src/containers/TeamProgress/index.js",["181"],"import React, { useEffect } from 'react';\nimport NavHeader from '../../components/NavHeader';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { CircularProgressbarWithChildren, buildStyles } from 'react-circular-progressbar';\nimport { getPercentageOfNumber } from '../../utils/getPercentageOfNumber';\n// actions\nimport { changeWeek, getCurrentSelectedChallenge } from '../../modules/challenges';\n// style\nimport './index.css';\nimport { getMemberStats, getTeamStats } from '../../modules/stats';\n// icons\nimport iconFilterMember from '../../assets/icons/icon_filterMember.png';\nimport MemberStats from '../../components/MemberStats';\n\nconst mainActions = {\n    getCurrentSelectedChallengeAction: getCurrentSelectedChallenge,\n    getTeamStatsAction: getTeamStats,\n    changeWeekAction: changeWeek,\n    getMemberStatsAction: getMemberStats\n}\n\nconst TeamProgress = ({\n    user: { first_name: firstName, last_name: lastName, image },\n    changeWeekAction,\n    currentWeek,\n    numberOfWeeks,\n    start_date = null,\n    getTeamStatsAction,\n    getCurrentSelectedChallengeAction,\n    estimatedWeekly = 'Estimated Completion Date: Jan 24, 2021',\n    estimatedOverall = 'Estimated Completion Date: March 1, 2021',\n    weeklyProgress,\n    totalProgress,\n    getMemberStatsAction,\n    memberStats\n}) => {\n\n    useEffect(() => {\n        getTeamStatsAction();\n        getCurrentSelectedChallengeAction();\n        getMemberStatsAction();\n    }, [])\n\n    return (\n        <div className=\"teamProgressContainer\">\n            <NavHeader\n                title=\"Team Progress\"\n                firstName={firstName}\n                lastName={lastName}\n                userImage={image}\n                numbOfWeek={currentWeek}\n                maxWeeks={numberOfWeeks}\n                prevWeek={() => {\n                    getMemberStatsAction(currentWeek - 1)\n                    changeWeekAction(currentWeek - 1)\n                }}\n                nextWeek={() => {\n                    getMemberStatsAction(currentWeek + 1)\n                    changeWeekAction(currentWeek + 1)\n                }}\n                startDate={start_date}\n            />\n            <div className=\"teamProgressWrapper\">\n                <div className=\"teamProgressContent\">\n                    <div className=\"teamProgressProgressWrapper\">\n                        <div className=\"teamProgressWeeklyProgress\">\n                            <div className=\"teamProgressGraphTitle\">Weekly progress</div>\n                            <div className=\"teamProgressGraphSubtitle\">{estimatedWeekly}</div>\n                            <div className=\"teamProgressGraphWrapper\">\n                                <CircularProgressbarWithChildren\n                                    value={getPercentageOfNumber(weeklyProgress.done, weeklyProgress.total_tasks)}\n                                    styles={buildStyles({\n                                        pathColor: \"#E83A1F\",\n                                        trailColor: \"#ffffff\",\n                                        backgroundColor: \"#F8F9FB\",\n                                    })}\n                                    strokeWidth={7}\n                                    background\n                                    minValue={0}\n                                    maxValue={100}\n                                >\n                                    <div>\n                                        <div className=\"teamProgressGraphPercentage\">\n                                            {getPercentageOfNumber(weeklyProgress.done, weeklyProgress.total_tasks)} %\n                                        </div>\n                                        <div className=\"teamProgressGraphPercentageSubtitle\">\n                                            weekly team progress\n                                        </div>\n                                    </div>\n                                </CircularProgressbarWithChildren>\n                            </div>\n                        </div>\n                        <div className=\"teamProgressOverallProgress\">\n                            <div className=\"teamProgressGraphTitle\">OVERALL progress</div>\n                            <div className=\"teamProgressGraphSubtitle\">{estimatedOverall}</div>\n                            <div className=\"teamProgressGraphWrapper\">\n                                <CircularProgressbarWithChildren\n                                    value={getPercentageOfNumber(totalProgress.done, totalProgress.total_tasks)}\n                                    styles={buildStyles({\n                                        pathColor: \"#E83A1F\",\n                                        trailColor: \"#ffffff\",\n                                        backgroundColor: \"#F8F9FB\",\n                                    })}\n                                    strokeWidth={7}\n                                    background\n                                    minValue={0}\n                                    maxValue={100}\n                                >\n                                    <div>\n                                        <div className=\"teamProgressGraphPercentage\">\n                                            {getPercentageOfNumber(totalProgress.done, totalProgress.total_tasks)} %\n                                        </div>\n                                        <div className=\"teamProgressGraphPercentageSubtitle\">\n                                            oweral team progress\n                                        </div>\n                                    </div>\n                                </CircularProgressbarWithChildren>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"teamProgressMemberWrapper\">\n                        <div className=\"teamProgressMemberFilterHeader\">\n                            <div className=\"teamProgressMemberFilterTitle\">ATHLETE PROGRESS</div>\n                            <div className=\"teamProgressFilterWrapper\" onClick={() => alert('sort')}>\n                                <div className=\"teamProgressFilterLabel\">\n                                    Most active\n                                </div>\n                                <img alt=\"filter\" src={iconFilterMember} className=\"teamProgressFilterIcon\" />\n                            </div>\n                            <div className=\"teamProgressDummyDiv\"/>\n                        </div>\n                        <div className=\"teamProgressMemberStatsWrapper\">\n                            {\n                                memberStats.map((item, key) => (\n                                    <MemberStats\n                                        key={key}\n                                        firstName={item.user.user.first_name}\n                                        lastName={item.user.user.last_name}\n                                        image={item.user.user.image}\n                                        weeklyProgress={item.weekly}\n                                        overallProgress={item.overall}\n                                        isLastItem={memberStats.length - 1 === key}\n                                    />\n                                ))\n                            }\n                        </div>         \n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default withRouter(connect(\n({\n    auth: {\n        user,\n    },\n    challenges: {\n        currentWeek,\n        numberOfWeeks,\n        challegeData: {\n            start_date\n        },\n    },\n    stats: {\n        weeklyProgress,\n        totalProgress,\n        memberStats\n    }\n}) => ({\n    user,\n    currentWeek,\n    numberOfWeeks,\n    start_date,\n    weeklyProgress,\n    totalProgress,\n    memberStats\n}),\ndispatch => bindActionCreators(mainActions, dispatch)\n)(TeamProgress));\n","/Users/macbook/restoic-app-19339/restoic-web/src/components/MemberStats/index.js",[],"/Users/macbook/restoic-app-19339/restoic-web/src/containers/Downloads/index.js",["182"],"/Users/macbook/restoic-app-19339/restoic-web/src/components/GroupOfDownloads/index.js",[],"/Users/macbook/restoic-app-19339/restoic-web/src/components/DownloadsItem/index.js",[],{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":33,"column":5,"nodeType":"189","endLine":33,"endColumn":7,"suggestions":"190"},{"ruleId":"191","severity":1,"message":"192","line":7,"column":1,"nodeType":"193","endLine":13,"endColumn":4},{"ruleId":"191","severity":1,"message":"192","line":31,"column":1,"nodeType":"193","endLine":88,"endColumn":3},{"ruleId":"194","severity":1,"message":"195","line":66,"column":2,"nodeType":"196","messageId":"197","endLine":66,"endColumn":4},{"ruleId":"198","severity":1,"message":"199","line":1,"column":28,"nodeType":"200","messageId":"201","endLine":1,"endColumn":36},{"ruleId":"187","severity":1,"message":"202","line":76,"column":8,"nodeType":"189","endLine":76,"endColumn":10,"suggestions":"203"},{"ruleId":"191","severity":1,"message":"192","line":39,"column":1,"nodeType":"193","endLine":114,"endColumn":3},{"ruleId":"191","severity":1,"message":"192","line":32,"column":1,"nodeType":"193","endLine":72,"endColumn":3},{"ruleId":"187","severity":1,"message":"204","line":44,"column":8,"nodeType":"189","endLine":44,"endColumn":10,"suggestions":"205"},{"ruleId":"187","severity":1,"message":"206","line":33,"column":8,"nodeType":"189","endLine":33,"endColumn":10,"suggestions":"207"},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.authenticated' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["210"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getCurrentSelectedChallengeAction' and 'getTeamStatsAction'. Either include them or remove the dependency array. If 'getTeamStatsAction' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["211"],"React Hook useEffect has missing dependencies: 'getCurrentSelectedChallengeAction', 'getMemberStatsAction', and 'getTeamStatsAction'. Either include them or remove the dependency array. If 'getTeamStatsAction' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["212"],"React Hook useEffect has a missing dependency: 'getCurrentSelectedChallengeAction'. Either include it or remove the dependency array. If 'getCurrentSelectedChallengeAction' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["213"],"no-global-assign","no-unsafe-negation",{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},"Update the dependencies array to be: [props.authenticated, props.history]",{"range":"222","text":"223"},"Update the dependencies array to be: [getCurrentSelectedChallengeAction, getTeamStatsAction]",{"range":"224","text":"225"},"Update the dependencies array to be: [getCurrentSelectedChallengeAction, getMemberStatsAction, getTeamStatsAction]",{"range":"226","text":"227"},"Update the dependencies array to be: [getCurrentSelectedChallengeAction]",{"range":"228","text":"229"},[1055,1057],"[props.authenticated, props.history]",[2988,2990],"[getCurrentSelectedChallengeAction, getTeamStatsAction]",[1520,1522],"[getCurrentSelectedChallengeAction, getMemberStatsAction, getTeamStatsAction]",[1051,1053],"[getCurrentSelectedChallengeAction]"]